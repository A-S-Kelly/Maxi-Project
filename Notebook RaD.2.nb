---
title: "Regression Function"
output: html_notebook
---
Load packages and data

```{r}
library(tidyverse)
source("Rallfun-v35.txt")
load("french_lexicon_project_rt_data.RData")
library(purrr)
set.seed(21)
```

The RaD function is designed to classify statistically regression slopes between two R objects, according to coefficients and corresponding p-values. Potential output includes "negative slope" (represented as -1), "positive slope" (represented as 1) or "no significant difference" (represented as 0):

```{r}
RaD <- function(x, y) {
  xy <- lm(x ~ y)
  co_eff <- sign(xy$coefficients[2])
  sumres <- summary(xy)
  p_res <- sumres$coefficients[2, 4]
  if (co_eff == -1 & p_res < 0.05) {
    print(-1)
  } else if (co_eff == 1 & p_res < 0.05) {
    print(1) 
  } else {
    print(0)
  }
}
```

The function is tested by applying it to the 'mtcars' dataset, providing classification of a significant negative and positive slope, and a non-significant regression slope result.

```{r}
neg_sig_lm <- summary(lm(mtcars$mpg ~ mtcars$cyl))
pos_sig_lm <- summary(lm(mtcars$cyl ~ mtcars$hp))
non_sig_lm <- summary(lm(mtcars$wt ~ mtcars$qsec))

RaD(mtcars$mpg, mtcars$cyl)
RaD(mtcars$cyl, mtcars$hp)
RaD(mtcars$wt, mtcars$qsec)
```

We can then filter data from 20 participants in the french lexicon project, and compute the deciles for the word and non-word condition reaction times in order to classify slope across deciles/conditions. 

```{r}

participant_numbers <- sample(flp$participant, 20, replace = FALSE)

p_num <- c(764, 247, 680, 180, 936, 896, 100, 168, 962, 826, 649, 912, 57, 602, 171, 37, 511,
           275, 486, 616)

P_Data <- filter(flp, participant %in% p_num)

P_Data_Non_Word <- filter(P_Data, condition %in% "non-word")
P_Data_Word <- filter(P_Data, condition %in% "word")

NW_Deciles <- by(P_Data_Non_Word$rt, P_Data_Non_Word$participant, deciles)
W_Deciles <- by(P_Data_Word$rt, P_Data_Word$participant, deciles)

Final_NW_Deciles <- NW_Deciles[lapply(NW_Deciles, length) == 9]
Final_W_Deciles <- W_Deciles[lapply(W_Deciles, length) == 9]

Non_Word_Deciles <- purrr::flatten_dbl(Final_NW_Deciles)
Word_Deciles <- purrr::flatten_dbl(Final_W_Deciles)

Participants <- rep(1:20, each = 9)
Final_Df <- as.data.frame(cbind(Word_Deciles, Non_Word_Deciles, Participants))
```

The RaD function is the applied to the word and non-word deciles to determine the regression slope across participants. Here it is applied to the first participant:

```{r}
Par_1 <- subset(Final_Df, Participants == 1, 
select=c(Word_Deciles, Non_Word_Deciles))

Res <- apply(Par_1, 1, FUN = function(X) 
  RaD(Par_1$Word_Deciles, Par_1$Non_Word_Deciles))
```

